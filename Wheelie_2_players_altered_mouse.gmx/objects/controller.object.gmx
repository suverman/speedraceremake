<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>winner = 0;

global.turn = 0;//player 0(p1)/1(p2) turn
rounds_left = INI.total_rounds;

randomize();
before_crash_gear = 0;

global.scorefont = font_add_sprite_ext(spr_font, "0123456789", true, 2);

game_ended = false;

// Vars from INI
enemy_min_angle = INI.enemy_min_angle;
enemy_max_angle = INI.enemy_max_angle;
enemy_speed_x_min = INI.enemy_speed_x_min;
enemy_speed_x_max = INI.enemy_speed_x_max;

player_spawn_x = INI.player_spawn_x;

window_width = INI.window_width;
window_height = INI.window_height;


countdown = INI.countdown;
SCORE[0] = 0;
SCORE[1] = 0;

window_set_size(window_width,window_height)
view_wview = window_width;
view_wview = window_height;
view_wview = 320;
view_hview = 240;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///spawn player

Background.wave_angle_top = 0;
Background.wave_angle_bot = 0;
GameRecorder.dist = 0;
EnemySpawner.force_spawn = false;

game_ended = false;
Background.game_started = true;
countdown = INI.countdown;
var c = instance_create(controller.player_spawn_x,room_height/2,obj_car);
c.invincibility = INI.invincibility_timer*room_speed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// countdown finished
if global.turn == 0
{
    global.turn = 1;
    alarm[1] = room_speed*2;
    //FlashEffect.spawn_car_time_left = room_speed;
}
else
{    
    if rounds_left &gt; 1
    {
        rounds_left -= 1;
        alarm[1] = room_speed*2;
        global.turn = 0;
        
        GameRecorder.totalEnemy = 0;
        GameRecorder.dist = 0;
        EnemySpawner.alarm[0] = .2*room_speed;
    }
    else
    {
        if SCORE[0] == SCORE[1]
        {
            winner = 0;
        }
        else if SCORE[0] &gt; SCORE[1]
        {
            winner = 1;
        }
        else
        {
            winner = 2;
        }
        //save scores
        var file;
        file = file_text_open_append("Scores.txt");
        file_text_writeln(file);
        file_text_write_string(file, string(date_get_day(date_current_datetime()))+"/"+string(date_get_month(date_current_datetime()))+"/"+string(date_get_year(date_current_datetime()))+" "+string(date_get_hour(date_current_datetime()))+":"+string(date_get_minute(date_current_datetime()))+" "+string(SCORE[0])+" "+string(SCORE[1]));
        file_text_close(file);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///quit game
if keyboard_check(vk_left) and keyboard_check(ord("1"))
{
    game_end();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
