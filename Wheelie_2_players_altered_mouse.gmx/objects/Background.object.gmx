<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>wave_angle_top = 0;
wave_angle_bot = 0;


dist_moved = 0;
dist_moved_fences = 0;

//Vars from INI
distance_to_create_roadlines = INI.distance_to_create_roadlines;
roadlines_border_distance = INI.roadlines_border_distance;
roadlines_border_distance_bottom = INI.roadlines_border_distance;//different border for bottom  
roadlines_border_distance_base = roadlines_border_distance;

distance_to_create_fences = INI.distance_to_create_fences;
fences_border_distance = INI.fences_border_distance;


// spawn initial road
road_last_x = 0;
var _x = -30;
while(_x &lt; room_width + distance_to_create_roadlines)
{
    var o = instance_create(_x,roadlines_border_distance,obj_background_line);
    o.wave = true;
    o = instance_create(_x,room_height-roadlines_border_distance,obj_background_line);
    o.wave = true; o.wave_bottom = true;
    
    road_last_x = _x-distance_to_create_roadlines;
    _x += distance_to_create_roadlines;
}

// spawn initial fences
_x = -50;
fence_last_x = 0;
while(_x &lt; room_width + distance_to_create_fences)
{
    var f = instance_create(_x,fences_border_distance,obj_background_line);
    f.sprite_index = spr_tileset_border;
    f.wave = true;
    f = instance_create(_x,room_height-fences_border_distance,obj_background_line);
    f.sprite_index = spr_tileset_border;
    f.wave = true; f.wave_bottom = true;
    
    fence_last_x = _x-distance_to_create_fences;
    _x += distance_to_create_fences;
}


game_started = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if game_started
{
    if controller.SCORE[global.turn] &gt;= INI.wave_score_start
    {
        var _spd_mult = 1;
        if instance_exists(obj_car)
        {
            if obj_car.speed_x == 0
            {
                _spd_mult = 0;
            }
            else
            {
                _spd_mult = clamp(obj_car.speed_x/10,0,1);
            }
        }
        
        //top
        var _wave_spd = INI.wave_top_speed;
        var _wave_amp = INI.wave_top_amplitude;
        if controller.SCORE[global.turn] &gt;= INI.wave_hardmode_score_start
        {
            _wave_spd = _wave_spd*INI.wave_hardmode_speed_multiplier;
            _wave_amp = _wave_amp*INI.wave_hardmode_amplitude_multiplier;
        }
        
        
        wave_angle_top += _wave_spd*_spd_mult;
        roadlines_border_distance = roadlines_border_distance_base + dsin(wave_angle_top)*_wave_amp;
        
        //bot
        _wave_spd = INI.wave_bottom_speed;
        _wave_amp = INI.wave_bottom_amplitude;
        if controller.SCORE[global.turn] &gt;= INI.wave_hardmode_score_start
        {
            _wave_spd = _wave_spd*INI.wave_hardmode_speed_multiplier;
            _wave_amp = _wave_amp*INI.wave_hardmode_amplitude_multiplier;
        }
        
        wave_angle_bot += _wave_spd*_spd_mult;
        roadlines_border_distance_bottom = roadlines_border_distance_base + dsin(wave_angle_bot)*_wave_amp;
    }
    
    dist_moved += obj_car.speed_x;
    if dist_moved &gt; distance_to_create_roadlines
    {
        dist_moved = 0;
        var xx = road_last_x+distance_to_create_roadlines;
        var o = instance_create(xx,roadlines_border_distance,obj_background_line);
        o.wave = true;
        o = instance_create(xx,room_height-roadlines_border_distance,obj_background_line);
        o.wave = true; o.wave_bottom = true;
    }
    
    dist_moved_fences += obj_car.speed_x;
    if dist_moved_fences &gt; distance_to_create_fences
    {
        dist_moved_fences = 0;
        var xx = fence_last_x+distance_to_create_fences;
        var f = instance_create(xx,fences_border_distance,obj_background_line);
        f.sprite_index = spr_tileset_border;
        f.wave = true;
        f = instance_create(xx,room_height-fences_border_distance,obj_background_line);
        f.sprite_index = spr_tileset_border;
        f.wave = true; f.wave_bottom = true;
    }
}
else
{
    // wait for key press to start game
    if keyboard_check_pressed(ord("5")) and game_started == false and FlashEffect.spawn_car_time_left &lt;= 0 and controller.alarm[1] == -1
    {
        controller.winner = 0;
        controller.rounds_left = INI.total_rounds;
        //with(obj_enemy){instance_destroy();}
        global.turn = 0;
        controller.game_ended = false;
        game_started = true;
        GameRecorder.dist = 0;
        GameRecorder.last_enemy_spawn_ind = 0;
        GameRecorder.totalEnemy = 0;
        EnemySpawner.force_spawn = false;
        EnemySpawner.alarm[0] = room_speed;
        controller.SCORE[0] = 0;
        controller.SCORE[1] = 0;
        controller.countdown = INI.countdown;
        var c = instance_create(controller.player_spawn_x,room_height/2,obj_car);
        c.invincibility = INI.invincibility_timer*room_speed;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
