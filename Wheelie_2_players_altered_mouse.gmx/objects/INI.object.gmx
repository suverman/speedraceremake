<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// test
/*
if file_exists("config.ini")
{
    file_delete("config.ini");
}
*/
ini_open("config.ini");



//keys
key_startgame = ini_read_real("Keys","start_game",ord("5"));
key_switchgear = ini_read_real("Keys","switch_gear",vk_lalt);
key_accelerate = ini_read_real("Keys","accelerate",vk_lcontrol);

invincibility_timer = ini_read_real("Gameplay","invincibility_timer",1);
speed_spawn_cars_from_top = ini_read_real("Gameplay","speed_spawn_cars_from_top",2);

// controller
total_rounds = ini_read_real("Gameplay","total_rounds",2);
countdown = ini_read_real("Gameplay","countdown",30);
enemy_min_angle = ini_read_real("Enemy","min_angle",10);
enemy_max_angle = ini_read_real("Enemy","max_angle",60);
enemy_speed_x_min = ini_read_real("Enemy","speed_x_min",4);
enemy_speed_x_max = ini_read_real("Enemy","speed_x_max",4);

player_spawn_x = ini_read_real("Player","spawn_x",180);

window_width = ini_read_real("Window","width",320);
window_height = ini_read_real("Window","height",240);



// obj_car
pixelsForPoint = ini_read_real("Gameplay","pixels_for_1_point",600);// move X pixels to earn 1 point

sides_sensivity = ini_read_real("Controls","mouse_sensivity",1);
change_gear_timing = ini_read_real("Player","change_gear_timing",0.1);// how many seconds to kill engine power when switching gear(simulates a real shifting)
cruise_speed = ini_read_real("Player","cruise_speed",0); // when not accelerating, will cruise at this speed

gear_stats[0,0] = ini_read_real("Gears","1st_gear_top_speed",8);//top speed
gear_stats[0,1] = ini_read_real("Gears","1st_gear_acceleration_threshold",0.52);//acceleration threshold // smaller = less acceleration
gear_stats[0,2] = ini_read_real("Gears","1st_gear_deacceleration_threshold",0.030);//Deacceleration Threshold // smaller = deaccelerates slower

gear_stats[1,0] = ini_read_real("Gears","2nd_gear_top_speed",15);//top speed
gear_stats[1,1] = ini_read_real("Gears","2nd_gear_acceleration_threshold",0.067);//acceleration threshold // smaller = less acceleration
gear_stats[1,2] = ini_read_real("Gears","2nd_gear_deacceleration_threshold",0.030);//Deacceleration Threshold // smaller = deaccelerates slower

pitch_base = ini_read_real("Player","pitch_base",0.7);
pitch_divider = ini_read_real("Player","pitch_divider",3);


// Background
distance_to_create_roadlines = ini_read_real("Environment","distance_between_roadlines",15);
roadlines_border_distance = ini_read_real("Environment","roadlines_distance_to_top_bot_border",40);

distance_to_create_fences = ini_read_real("Environment","distance_between_fences",180);
fences_border_distance = ini_read_real("Environment","fences_distance_to_top_bot_border",44);

wave_top_speed = ini_read_real("Environment","wave_speed",1);
wave_top_amplitude = ini_read_real("Environment","wave_amplitude",20);

wave_bottom_speed = ini_read_real("Environment","wave_speed",2);
wave_bottom_amplitude = ini_read_real("Environment","wave_amplitude",15);

wave_score_start = ini_read_real("Environment","wave_score_start",5);

wave_hardmode_score_start = ini_read_real("Environment","wave_hardmode_score_start",300);
wave_hardmode_speed_multiplier = ini_read_real("Environment","wave_hardmode_speed_multiplier",1.5);
wave_hardmode_amplitude_multiplier= ini_read_real("Environment","wave_hardmode_amplitude_multiplier",1.2);

// UI
blackbars_width = ini_read_real("UI","black_bars_width",30);



// EnemySpawner
spawn_rate_min = ini_read_real("EnemySpawner","spawn_rate_min",30);
spawn_rate_max = ini_read_real("EnemySpawner","spawn_rate_max",60);
spawn_number = ini_read_real("EnemySpawner","spawn_number",2);
max_enemies_on_road = ini_read_real("EnemySpawner","max_enemies_on_road",5);

// FlashEffect
crash_flash_times = ini_read_real("CrashFlashing","crash_flash_times",3);
crash_flash_interval = ini_read_real("CrashFlashing","crash_flash_interval",0.1);

// hardmode
hard_score = ini_read_real("Hardmode","score_start",10);
hard_min_angle = ini_read_real("Hardmode","min_angle",0);
hard_max_angle = ini_read_real("Hardmode","max_angle",45);
hard_speed_x_min = ini_read_real("Hardmode","speed_x_min",8);
hard_speed_x_max = ini_read_real("Hardmode","speed_x_max",15);

ini_close();

if !file_exists("config.ini")
{
    ini_create();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
